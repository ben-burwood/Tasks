name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    types: [ ready_for_review ]
    branches-ignore:
      - 'dependabot/*'
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Release Tag"
        required: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Get App Version
        id: get_version
        run: |
          version_name=$(grep "tasksVersion" gradle/libs.versions.toml | awk -F'[= "]+' '{print $2}' | tr -d '\r\n')
          echo "version=$version_name" >> "$GITHUB_OUTPUT"

      - name: Check App Version matches Release
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        run: |
          appVersion=${{ steps.get_version.outputs.version }}

          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            releaseVersion="${{ github.event.inputs.tag_name }}"
          elif [ "${{ github.event_name }}" == "release" ]; then
            releaseVersion="${{ github.event.release.tag_name }}"
          else
            echo "Cannot Check App Version for a ${{ github.event_name }} Event"
            exit 1
          fi

          if [ "$appVersion" != "$releaseVersion" ]; then
            echo "Version in build.gradle.kts ($appVersion) does not match Release Tag ($releaseVersion)"
            exit 1
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Build App
        run: ./gradlew --no-daemon build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: "Update the Release on Github"
    needs: build
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-debug.apk

      - name: Update GitHub Release with Artifacts
        env:
          GH_TOKEN: ${{ github.token }}
          version: ${{ needs.build.outputs.version }}
        run: |
          gh release upload $version app-debug.apk --clobber
